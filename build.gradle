buildscript {
    repositories {
        jcenter() // buildscript repo to get shadow from
    }
}

plugins {
    id 'eclipse'
    id 'net.minecraftforge.gradle' version '[6.0.16,6.2)'
    id 'com.gradleup.shadow' version '8.3.0'
}
apply plugin: 'com.gradleup.shadow'

version = '1.0'
group = 'com.yourname.modid'
archivesBaseName = 'modid'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'official', version: '1.20.1'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    copyIdeResources = true

    runs {
        client {
            def mcreatorJvmOptions = System.getenv('MCREATOR_JVM_OPTIONS')
            if (mcreatorJvmOptions) {
                jvmArgs += mcreatorJvmOptions.split("\\s+").findAll { it.trim() }.toList()
            }
        }

        server {
        }

        configureEach {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
    }
}


repositories {
    // java repo to get the repackaged lib from
    maven { url "https://github.com/MarceloGToonzzz/ya_fnafmod2" }
}

configurations {
    shade
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.20.1-47.3.0'
    //shade 'io.github.marcelogtoonzzz.ya_fnafmod2:1.0'
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

apply from: 'mcreator.gradle'

jar {
    archiveClassifier = 'slim'
}

shadowJar {
    archiveClassifier = ''
    configurations = [project.configurations.shade]
    finalizedBy 'reobfShadowJar'
}

assemble.dependsOn shadowJar

reobf {
    shadowJar { }
}